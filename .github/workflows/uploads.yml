name: Upload release

on:
  # https://docs.github.com/en/webhooks/webhook-events-and-payloads#release
  release:
    types: [published]

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ github.ref_name || github.sha }}
  cancel-in-progress: true

jobs:
  # create compressed tarballs and upload them to the published release
  upload:
    if: >-
      !cancelled()
      && !github.event.repository.fork
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    env:
      REPO_NAME: "${{ github.event.repository.name }}"
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Archive Source
        shell: sh
        run: |
          mkdir -p "$RUNNER_TEMP/release"
          export ARCHIVE_NAME="$RUNNER_TEMP/release/$REPO_NAME-$GITHUB_REF_NAME.tar"
          tar \
          --dereference --hard-dereference \
          --directory "$GITHUB_WORKSPACE" \
          -cvfz "$ARCHIVE_NAME.gz" \
          .
          sha256sum "$ARCHIVE_NAME.gz" > "$ARCHIVE_NAME.gz.sha256sum"
          tar \
          --dereference --hard-dereference \
          --directory "$GITHUB_WORKSPACE" \
          -cvfj "$ARCHIVE_NAME.bz2" \
          .
          sha256sum "$ARCHIVE_NAME.bz2" > "$ARCHIVE_NAME.bz2.sha256sum"

      - name: Upload Files
        shell: sh
        run: |
          gh release \
          upload \
          --clobber "$GITHUB_REF_NAME" \
          --repo "$GITHUB_REPOSITORY" \
          "$RUNNER_TEMP/release/*"
